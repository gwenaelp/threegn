
import { expect, test } from 'vitest';
import * as evaluator from "../src/evaluator";
import getPositionAttributeValue from './utils/getPositionAttributeValue';

test('simple combine xyz', () => {
  let { geometry } = evaluator.buildNodes([{"name":"Value","label":"","default_label":"Value","type":"VALUE","inputs":[],"outputs":[{"name":"Value","identifier":"Value","type":"VALUE","links":[{"node":"Combine XYZ","socket":"X"},{"node":"Combine XYZ","socket":"Y"}],"display_shape":"CIRCLE","value":2}],"color":[0.6079999804496765,0.6079999804496765,0.6079999804496765],"location":[256.25,-182.251953125],"dimensions":[280,160],"id":"1"},{"name":"Combine XYZ","label":"","default_label":"Combine XYZ","type":"COMBXYZ","inputs":[{"name":"X","identifier":"X","type":"VALUE","links":[{"node":"Value","socket":"Value"}],"display_shape":"DIAMOND_DOT","is_multi_input":false,"value":0},{"name":"Y","identifier":"Y","type":"VALUE","links":[{"node":"Value","socket":"Value"}],"display_shape":"DIAMOND_DOT","is_multi_input":false,"value":0},{"name":"Z","identifier":"Z","type":"VALUE","links":[],"display_shape":"DIAMOND_DOT","is_multi_input":false,"value":3}],"outputs":[{"name":"Vector","identifier":"Vector","type":"VECTOR","links":[{"node":"Cube","socket":"Size"}],"display_shape":"DIAMOND_DOT","value":[0,0,0]}],"color":[0.6079999804496765,0.6079999804496765,0.6079999804496765],"location":[434.25,-187.251953125],"dimensions":[280,238],"id":"3"},{"name":"Cube","label":"","default_label":"Cube","type":"MESH_PRIMITIVE_CUBE","inputs":[{"name":"Size","identifier":"Size","type":"VECTOR","links":[{"node":"Combine XYZ","socket":"Vector"}],"display_shape":"CIRCLE","is_multi_input":false,"value":[1,1,1]},{"name":"Vertices X","identifier":"Vertices X","type":"INT","links":[],"display_shape":"CIRCLE","is_multi_input":false,"value":2},{"name":"Vertices Y","identifier":"Vertices Y","type":"INT","links":[],"display_shape":"CIRCLE","is_multi_input":false,"value":2},{"name":"Vertices Z","identifier":"Vertices Z","type":"INT","links":[],"display_shape":"CIRCLE","is_multi_input":false,"value":2}],"outputs":[{"name":"Mesh","identifier":"Mesh","type":"GEOMETRY","links":[{"node":"Group Output","socket":"Output_1"}],"display_shape":"CIRCLE"}],"color":[0.6079999804496765,0.6079999804496765,0.6079999804496765],"location":[626.25,-165.251953125],"dimensions":[280,402],"id":"4"},{"name":"Group Output","label":"","default_label":"Group Output","type":"GROUP_OUTPUT","inputs":[{"name":"Geometry","identifier":"Output_1","type":"GEOMETRY","links":[{"node":"Cube","socket":"Mesh"}],"display_shape":"CIRCLE","is_multi_input":false},{"name":"","identifier":"__extend__","type":"CUSTOM","links":[],"display_shape":"CIRCLE","is_multi_input":false}],"outputs":[],"color":[0.6079999804496765,0.6079999804496765,0.6079999804496765],"location":[811.25,-165.251953125],"dimensions":[280,144],"id":"5"}]);
  expect(JSON.stringify(getPositionAttributeValue(geometry))).toBe(JSON.stringify([[1,1,1.5,1],[1,1,-1.5,1],[1,-1,1.5,1],[1,-1,-1.5,-1],[-1,1,-1.5,-1],[-1,1,1.5,-1],[-1,-1,-1.5,-1],[-1,-1,1.5,-1],[-1,1,-1.5,1],[1,1,-1.5,-1],[-1,1,1.5,1],[1,1,1.5,-1],[-1,-1,1.5,1],[1,-1,1.5,-1],[-1,-1,-1.5,1],[1,-1,-1.5,-1],[-1,1,1.5,1],[1,1,1.5,-1],[-1,-1,1.5,1],[1,-1,1.5,1],[1,1,-1.5,-1],[-1,1,-1.5,1],[1,-1,-1.5,-1],[-1,-1,-1.5,null]]));
});
